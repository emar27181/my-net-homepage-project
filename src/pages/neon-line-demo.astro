---
import Layout from '../layouts/Layout.astro';
import NeonLine from '../components/NeonLine.astro';

const title = 'ネオンライン管理システム デモ';
---

<Layout title={title}>
  <main class="demo-container">
    <h1>ネオンライン管理システム デモ</h1>
    <p>中央管理されたネオンライン設定を使用した様々な表示例</p>

    <!-- ボーダータイプのデモ -->
    <section class="demo-section">
      <h2>ボーダータイプ</h2>
      <div class="demo-grid">
        <NeonLine lineId="primary" type="border" size="sm">
          <p>プライマリー (Small)</p>
        </NeonLine>
        
        <NeonLine lineId="secondary" type="border" size="md" rounded>
          <p>セカンダリー (Medium, Rounded)</p>
        </NeonLine>
        
        <NeonLine lineId="cyan" type="border" size="lg">
          <p>サイバーシアン (Large)</p>
        </NeonLine>
        
        <NeonLine lineId="pink" type="border" size="xl">
          <p>ネオンピンク (Extra Large)</p>
        </NeonLine>
      </div>
    </section>

    <!-- 区切り線タイプのデモ -->
    <section class="demo-section">
      <h2>区切り線タイプ</h2>
      <div class="demo-dividers">
        <p>プライマリー区切り線</p>
        <NeonLine lineId="primary" type="divider" width="100%" height="3px" />
        
        <p>ライムグリーン区切り線</p>
        <NeonLine lineId="lime" type="divider" width="80%" height="2px" />
        
        <p>エラーレッド区切り線</p>
        <NeonLine lineId="error" type="divider" width="60%" height="4px" />
        
        <p>サブトル区切り線</p>
        <NeonLine lineId="subtle" type="divider" width="40%" height="1px" />
      </div>
    </section>

    <!-- アンダーラインタイプのデモ -->
    <section class="demo-section">
      <h2>アンダーラインタイプ</h2>
      <div class="demo-underlines">
        <NeonLine lineId="primary" type="underline" text="プライマリーアンダーライン" />
        <NeonLine lineId="success" type="underline" text="成功メッセージ" />
        <NeonLine lineId="warning" type="underline" text="警告メッセージ" />
        <NeonLine lineId="cyan" type="underline" text="サイバーシアンテキスト" />
      </div>
    </section>

    <!-- フレームタイプのデモ -->
    <section class="demo-section">
      <h2>フレームタイプ</h2>
      <div class="demo-frames">
        <NeonLine lineId="gradient" type="frame" size="md" rounded>
          <h3>グラデーションフレーム</h3>
          <p>レインボーグラデーション効果のフレームです。</p>
        </NeonLine>
        
        <NeonLine lineId="pink" type="frame" size="lg">
          <h3>ピンクフレーム</h3>
          <p>フリッカー効果付きのネオンピンクフレームです。</p>
        </NeonLine>
      </div>
    </section>

    <!-- 状態表示デモ -->
    <section class="demo-section">
      <h2>状態表示</h2>
      <div class="demo-states">
        <NeonLine lineId="success" type="border" size="sm">
          <span class="state-text">✓ 処理が完了しました</span>
        </NeonLine>
        
        <NeonLine lineId="warning" type="border" size="sm">
          <span class="state-text">⚠ 注意が必要です</span>
        </NeonLine>
        
        <NeonLine lineId="error" type="border" size="sm">
          <span class="state-text">✗ エラーが発生しました</span>
        </NeonLine>
      </div>
    </section>

    <!-- サイズ比較デモ -->
    <section class="demo-section">
      <h2>サイズ比較</h2>
      <div class="demo-sizes">
        <NeonLine lineId="cyan" type="border" size="sm">
          <span>Small (sm)</span>
        </NeonLine>
        
        <NeonLine lineId="cyan" type="border" size="md">
          <span>Medium (md)</span>
        </NeonLine>
        
        <NeonLine lineId="cyan" type="border" size="lg">
          <span>Large (lg)</span>
        </NeonLine>
        
        <NeonLine lineId="cyan" type="border" size="xl">
          <span>Extra Large (xl)</span>
        </NeonLine>
      </div>
    </section>

    <!-- 無効化デモ -->
    <section class="demo-section">
      <h2>無効化状態</h2>
      <div class="demo-disabled">
        <NeonLine lineId="primary" type="border" size="md">
          <span>通常状態</span>
        </NeonLine>
        
        <NeonLine lineId="primary" type="border" size="md" disabled>
          <span>無効化状態</span>
        </NeonLine>
      </div>
    </section>

    <!-- 設定変更説明 -->
    <section class="demo-section">
      <h2>一元管理の利点</h2>
      <div class="benefits">
        <p>このシステムの利点：</p>
        <ul>
          <li><strong>設定の一元管理</strong>: `neonLineManager.ts`で全ての設定を管理</li>
          <li><strong>動的変更</strong>: TypeScriptから設定変更すると全体に反映</li>
          <li><strong>型安全性</strong>: TypeScriptによる型チェック</li>
          <li><strong>パフォーマンス</strong>: CSS変数による最適化</li>
          <li><strong>保守性</strong>: 単一責任の原則に従った設計</li>
        </ul>
      </div>
    </section>

    <!-- 使用方法 -->
    <section class="demo-section">
      <h2>使用方法</h2>
      <div class="usage">
        <h3>基本的な使用法</h3>
        <pre><code>&lt;NeonLine lineId="primary" type="border" size="md"&gt;
  &lt;p&gt;コンテンツ&lt;/p&gt;
&lt;/NeonLine&gt;</code></pre>
        
        <h3>設定変更例</h3>
        <pre><code>import { updateNeonLine } from '../utils/neonLineManager';

// プライマリーカラーを赤に変更
updateNeonLine('primary', { 
  color: '#ff0000', 
  intensity: 'ultra' 
});</code></pre>
      </div>
    </section>
  </main>
</Layout>

<style>
  .demo-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
    background: var(--color-bg-primary);
    color: var(--color-text-primary);
  }

  h1 {
    text-align: center;
    color: var(--neon-primary);
    text-shadow: 0 0 10px var(--neon-primary);
    margin-bottom: 1rem;
  }

  h2 {
    color: var(--neon-secondary);
    border-bottom: 2px solid var(--neon-secondary);
    padding-bottom: 0.5rem;
    margin: 2rem 0 1rem 0;
  }

  .demo-section {
    margin: 3rem 0;
  }

  .demo-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin: 1.5rem 0;
  }

  .demo-dividers {
    margin: 1.5rem 0;
  }

  .demo-dividers p {
    margin: 1rem 0 0.5rem 0;
    color: var(--color-text-secondary);
  }

  .demo-underlines {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin: 1.5rem 0;
  }

  .demo-frames {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin: 1.5rem 0;
  }

  .demo-states {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin: 1.5rem 0;
  }

  .state-text {
    font-weight: bold;
    font-size: 1.1rem;
  }

  .demo-sizes {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin: 1.5rem 0;
  }

  .demo-disabled {
    display: flex;
    gap: 2rem;
    margin: 1.5rem 0;
  }

  .benefits {
    background: rgba(77, 121, 255, 0.05);
    border: 1px solid var(--neon-primary);
    border-radius: 8px;
    padding: 1.5rem;
    margin: 1.5rem 0;
  }

  .benefits ul {
    margin: 1rem 0;
    padding-left: 1.5rem;
  }

  .benefits li {
    margin: 0.5rem 0;
    color: var(--color-text-primary);
  }

  .usage {
    background: rgba(0, 0, 0, 0.3);
    border-radius: 8px;
    padding: 1.5rem;
    margin: 1.5rem 0;
  }

  .usage h3 {
    color: var(--neon-primary);
    margin: 1rem 0 0.5rem 0;
  }

  .usage pre {
    background: rgba(0, 0, 0, 0.5);
    border: 1px solid var(--neon-primary);
    border-radius: 4px;
    padding: 1rem;
    overflow-x: auto;
    margin: 0.5rem 0;
  }

  .usage code {
    color: var(--neon-cyan);
    font-family: 'Courier New', monospace;
    font-size: 0.9rem;
    line-height: 1.4;
  }

  /* レスポンシブ対応 */
  @media (max-width: 768px) {
    .demo-container {
      padding: 1rem;
    }

    .demo-grid {
      grid-template-columns: 1fr;
    }

    .demo-frames {
      grid-template-columns: 1fr;
    }

    .demo-disabled {
      flex-direction: column;
      gap: 1rem;
    }

    .usage pre {
      font-size: 0.8rem;
    }
  }

  /* アクセシビリティ対応 */
  @media (prefers-reduced-motion: reduce) {
    * {
      animation: none !important;
    }
  }
</style>

<script>
  // ネオンライン管理システムのデモンストレーション
  import { neonLineManager } from '../utils/neonLineManager';

  // ページロード時にCSS変数を適用
  document.addEventListener('DOMContentLoaded', () => {
    neonLineManager.applyToDOM();
    
    console.log('ネオンライン管理システム デモページが読み込まれました');
    console.log('利用可能な設定:', neonLineManager.getAllConfigs().map(c => c.id));
  });

  // 設定変更のデモ（開発時用）
  if (import.meta.env.DEV) {
    (window as any).neonDemo = {
      // プライマリーカラーを変更
      changePrimaryColor: (color: string) => {
        neonLineManager.updateConfig('primary', { color });
        neonLineManager.applyToDOM();
        console.log(`プライマリーカラーを ${color} に変更しました`);
      },
      
      // アニメーションを変更
      changeAnimation: (lineId: string, animation: string) => {
        neonLineManager.updateConfig(lineId, { animation: animation as any });
        neonLineManager.applyToDOM();
        console.log(`${lineId} のアニメーションを ${animation} に変更しました`);
      },
      
      // 全設定を表示
      showConfigs: () => {
        console.table(neonLineManager.getAllConfigs());
      }
    };
    
    console.log('開発モード: window.neonDemo でデモ関数にアクセスできます');
  }
</script>