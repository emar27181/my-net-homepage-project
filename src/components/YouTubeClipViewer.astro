---
export interface Props {
  clipUrl: string;
  title?: string;
  description?: string;
  autoplay?: boolean;
  width?: string;
  height?: string;
}

const { 
  clipUrl, 
  title = "YouTube Clip", 
  description = "",
  autoplay = false,
  width = "100%",
  height = "315"
} = Astro.props;

// YouTubeURLから動画IDを抽出
function getVideoId(url: string): string {
  try {
    const urlObj = new URL(url);
    
    // youtu.be形式
    if (urlObj.hostname === 'youtu.be') {
      return urlObj.pathname.slice(1);
    }
    
    // youtube.com形式
    if (urlObj.hostname.includes('youtube.com')) {
      return urlObj.searchParams.get('v') || '';
    }
    
    return '';
  } catch (error) {
    console.error('Invalid YouTube URL:', error);
    return '';
  }
}

// 埋め込みURL生成
function getEmbedUrl(url: string, auto: boolean = false): string {
  const videoId = getVideoId(url);
  if (!videoId) return '';
  
  const params = new URLSearchParams();
  if (auto) params.set('autoplay', '1');
  params.set('modestbranding', '1');
  params.set('rel', '0');
  params.set('fs', '1');
  params.set('cc_load_policy', '0');
  params.set('enablejsapi', '1');
  params.set('loop', '0'); // 繰り返し再生を無効化
  
  return `https://www.youtube.com/embed/${videoId}?${params.toString()}`;
}

const embedUrl = getEmbedUrl(clipUrl, autoplay);
---

<div class="youtube-clip-viewer">
  {title && (
    <h3 class="clip-title">
      🎮 {title}
    </h3>
  )}
  
  <div class="video-container">
    <div class="video-wrapper">
      <iframe
        src={embedUrl}
        title={title}
        width="100%"
        height="100%"
        frameborder="0"
        allow="accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
        allowfullscreen
        loading="lazy"
      ></iframe>
      <div class="video-overlay">
        <div class="play-indicator">
          <div class="play-btn">▶</div>
          <p class="loading-text">Loading...</p>
        </div>
      </div>
    </div>
  </div>
  
  {description && (
    <div class="clip-description">
      <p>{description}</p>
    </div>
  )}
</div>

<style>
  .youtube-clip-viewer {
    margin: 1rem 0;
    padding: 0;
    background: transparent;
    border: none;
    border-radius: 0;
    position: relative;
  }

  .clip-title {
    font-family: 'Press Start 2P', monospace !important;
    font-size: 10px;
    color: #4d79ff;
    text-align: center;
    margin-bottom: 1.2rem;
    text-shadow: 1px 1px 0px #000000;
    letter-spacing: 1px;
    image-rendering: pixelated;
  }

  .video-container {
    position: relative;
    width: 100%;
    aspect-ratio: 16 / 9;
    background: #000;
    border: 2px solid var(--retro-primary);
    border-radius: 4px;
    overflow: hidden;
    box-shadow: inset 2px 2px 0px rgba(0,0,0,0.3);
  }

  .video-wrapper {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .video-wrapper iframe {
    width: 100%;
    height: 100%;
    display: block;
  }

  .video-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: #ffffff;
    font-family: var(--font-pixel-jp);
    text-align: center;
    z-index: 1;
    opacity: 1;
    transition: opacity 0.5s ease;
    pointer-events: none;
  }

  .play-indicator {
    text-align: center;
  }

  .play-btn {
    font-size: 3rem;
    color: var(--text-accessible-blue);
    margin-bottom: 0.5rem;
    text-shadow: 0 0 15px var(--text-accessible-blue);
    animation: pulse-play 2s ease-in-out infinite;
  }

  .loading-text {
    font-family: var(--font-pixel-jp);
    font-size: 11px;
    margin: 0;
    text-shadow: 1px 1px 0px #000000;
    opacity: 0.8;
  }

  @keyframes pulse-play {
    0%, 100% { 
      transform: scale(1); 
      text-shadow: 0 0 15px var(--text-accessible-blue);
    }
    50% { 
      transform: scale(1.1); 
      text-shadow: 0 0 25px var(--text-accessible-blue), 0 0 35px var(--text-accessible-blue);
    }
  }

  .clip-description {
    margin-top: 0.5rem;
    padding: 0.4rem;
    background: var(--color-bg-primary);
    border: 1px solid var(--retro-secondary);
    border-radius: 4px;
    font-family: var(--font-pixel-jp);
    font-size: 10px;
    color: #ffffff;
    text-shadow: 1px 1px 0px #000000;
    line-height: 1.3;
  }

  .clip-description p {
    margin: 0;
  }

  .clip-controls {
    margin-top: 0.5rem;
    text-align: center;
  }

  .external-link {
    display: inline-block;
    padding: 0.5rem 1rem;
    background: var(--color-bg-primary);
    border: 2px solid var(--retro-secondary);
    border-radius: 4px;
    color: var(--retro-secondary);
    text-decoration: none;
    font-family: var(--font-pixel-jp);
    font-size: 10px;
    font-weight: bold;
    text-shadow: 1px 1px 0px #000000, 0 0 5px var(--retro-secondary);
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .external-link:hover {
    background: var(--retro-secondary);
    color: var(--color-bg-primary);
    text-shadow: none;
    transform: scale(1.05);
    filter: brightness(1.2);
  }

  /* レスポンシブ対応 */
  @media (max-width: 768px) {
    .youtube-clip-viewer {
      padding: 0.5rem;
    }
    
    .clip-title {
      font-size: 12px;
      margin-bottom: 1.5rem;
    }
    
    .clip-description {
      font-size: 10px;
    }
    
    .external-link {
      font-size: 9px;
      padding: 0.4rem 0.8rem;
    }
  }

  @media (max-width: 480px) {
    .youtube-clip-viewer {
      padding: 0;
      margin: 0;
    }
    
    .clip-title {
      font-size: 10px;
      margin-bottom: 8px;
      padding: 0;
      line-height: 1.3;
    }
    
    .external-link {
      font-size: 6px;
      padding: 0.1rem 0.2rem;
    }
    
    .clip-description {
      padding: 0.05rem;
      margin-top: 1px;
      font-size: 7px;
      line-height: 1.1;
    }
    
    .video-container {
      border-width: 0;
      border-radius: 0;
      margin: 0;
    }
  }

  /* アクセシビリティ対応 */
  @media (prefers-reduced-motion: reduce) {
    .external-link:hover {
      transform: none !important;
    }
  }

  /* ダークモード対応 */
  @media (prefers-color-scheme: dark) {
    .video-container {
      box-shadow: inset 2px 2px 0px rgba(255,255,255,0.1);
    }
  }


  /* コントラスト調整 */
  .youtube-clip-viewer {
    border-color: var(--text-accessible-blue);
  }
  
  .video-container {
    border-color: var(--text-accessible-blue);
  }
  
  .external-link {
    border-color: var(--text-accessible-blue);
    color: var(--text-accessible-blue);
    text-shadow: 1px 1px 0px #000000, 0 0 5px var(--text-accessible-blue);
  }
  
  .external-link:hover {
    background: var(--text-accessible-blue);
    color: var(--color-bg-primary);
  }

  /* 動画読み込み完了時のオーバーレイ非表示 */
  .video-container iframe:not([src=""]) ~ .video-overlay {
    opacity: 0;
    pointer-events: none;
  }
</style>

<script>
  // 動画読み込み状態管理
  document.addEventListener('DOMContentLoaded', function() {
    const videoContainers = document.querySelectorAll('.youtube-clip-viewer .video-container');
    
    videoContainers.forEach(container => {
      const iframe = container.querySelector('iframe');
      const overlay = container.querySelector('.video-overlay');
      
      if (iframe && overlay) {
        // iframe読み込み完了時にオーバーレイを非表示
        iframe.addEventListener('load', function() {
          setTimeout(() => {
            overlay.style.opacity = '0';
            overlay.style.pointerEvents = 'none';
          }, 1000);
        });
        
        // エラー時の処理
        iframe.addEventListener('error', function() {
          const playBtn = overlay.querySelector('.play-btn');
          const loadingText = overlay.querySelector('.loading-text');
          
          if (playBtn) playBtn.textContent = '⚠️';
          if (loadingText) loadingText.textContent = '読み込みエラー';
        });
      }
    });
  });
</script>