---
// 64-bitレトロゲーム風UI コンポーネント（PlayStation、N64時代風）
export interface Props {
  playerLevel?: number;
  health?: number;
  mana?: number;
  experience?: number;
  coins?: number;
  showBars?: boolean;
  className?: string;
}

const { 
  playerLevel = 20,
  health = 85,
  mana = 60,
  experience = 75,
  coins = 1337,
  showBars = true,
  className = ''
} = Astro.props;
---

{showBars && (
  <div class={`game-ui-panel ${className}`}>
    <!-- プレイヤー情報（64bit風） -->
    <div class="game-status-bar">
      <div class="status-item">
        <span class="status-label">▲ Lv.{playerLevel} ▲</span>
      </div>
      <div class="status-item">
        <span class="status-label">◈ {coins} G</span>
      </div>
    </div>

    <!-- ステータスバー -->
    <div class="status-bars">
      <!-- HP バー -->
      <div class="status-bar-container">
        <span class="bar-label">HP</span>
        <div class="status-bar hp-bar">
          <div class="bar-fill" style={`width: ${health}%;`}></div>
          <div class="bar-text">{health}/100</div>
        </div>
      </div>

      <!-- MP バー -->
      <div class="status-bar-container">
        <span class="bar-label">MP</span>
        <div class="status-bar mp-bar">
          <div class="bar-fill" style={`width: ${mana}%;`}></div>
          <div class="bar-text">{mana}/100</div>
        </div>
      </div>

      <!-- EXP バー -->
      <div class="status-bar-container">
        <span class="bar-label">EXP</span>
        <div class="status-bar exp-bar">
          <div class="bar-fill" style={`width: ${experience}%;`}></div>
          <div class="bar-text">{experience}%</div>
        </div>
      </div>
    </div>
  </div>
)}

<style>
  .game-ui-panel {
    background: var(--color-bg-secondary);
    border: 2px solid var(--retro-primary);
    border-radius: 6px;
    padding: 12px;
    font-family: var(--font-pixel-jp);
    position: relative;
  }

  .game-status-bar {
    display: flex;
    justify-content: space-between;
    margin-bottom: 8px;
  }

  .status-item {
    font-size: 12px;
    color: var(--retro-secondary);
    text-shadow: 1px 1px 0px var(--game-bg-primary);
    font-weight: bold;
  }

  .status-bars {
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

  .status-bar-container {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .bar-label {
    font-size: 10px;
    color: var(--game-text);
    width: 30px;
    text-align: right;
    text-shadow: 1px 1px 0px var(--game-bg-primary);
  }

  .status-bar {
    flex: 1;
    height: 16px;
    background: var(--game-bg-primary);
    border: 1px solid var(--game-border);
    border-radius: 2px;
    position: relative;
    overflow: hidden;
  }

  .bar-fill {
    height: 100%;
    transition: width 0.3s ease;
    position: relative;
  }

  .hp-bar .bar-fill {
    background: var(--retro-accent);
  }

  .mp-bar .bar-fill {
    background: var(--retro-blue);
  }

  .exp-bar .bar-fill {
    background: var(--retro-secondary);
  }

  .bar-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 8px;
    color: var(--game-text);
    text-shadow: 1px 1px 0px var(--game-bg-primary);
    z-index: 1;
  }

  /* モバイル対応 */
  @media (max-width: 768px) {
    .game-status-bar {
      flex-direction: column;
      gap: 4px;
    }
    
    .status-bar-container {
      gap: 4px;
    }
    
    .bar-label {
      width: 25px;
      font-size: 9px;
    }
    
    .status-bar {
      height: 14px;
    }
    
    .bar-text {
      font-size: 7px;
    }
  }
</style>